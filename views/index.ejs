<html>
<%- include("./share/head.ejs") %>
<body>
<div class="container" id="app">
    <div class="select-panel row p-2 position-relative border-bottom">
        <div class="col position-relative cursor-pointer">
            <span class="d-flex align-items-center" @click="toggleNavShow(0)">位置<em class="triangeld"
                                                                                      :class="{active: showNavConfig[0]}"></em></span>
        </div>
        <div class="click-show-part bg-light row position-absolute w-100 top-100 z-3"
             :class="{'d-none': !showNavConfig[0]}">
            <ul class="list-group col-5 pe-0">
                <li @click="curProvince = item.value"
                    class="list-group-item border-0 cursor-pointer"
                    :class="{'list-group-item-success': curProvince === item.value}"
                    v-for="(item, index) in globalData.cities" :key="item.value">
                    {{item.label}}
                </li>
            </ul>
            <ul class="list-group col-7 pe-0">
                <li @click="selectCurCity(item)"
                    class="list-group-item border-0 cursor-pointer"
                    :class="{'list-group-item-success': curCity === item.value}"
                    v-for="(item, index) in globalData.cities.find(item => item.value === curProvince).children"
                    :key="item.value">
                    {{item.label}}
                </li>
            </ul>
        </div>
        <div class="col position-relative cursor-pointer">
            <span class="d-flex align-items-center" @click="toggleNavShow(1)">租金<em class="triangeld"
                                                                                      :class="{active: showNavConfig[1]}"></em></span>
        </div>
        <div class="click-show-part bg-light position-absolute start-0 top-100 z-3"
             :class="{'d-none': !showNavConfig[1]}">
            <ul class="list-group col">
                <li @click="selectCurPrice(item)"
                    class="list-group-item border-0 cursor-pointer"
                    :class="{'list-group-item-success': rentMoneyValue === item.value}"
                    v-for="(item, index) in globalData.rentMoneys" :key="item.value">
                    {{item.label}}
                </li>
            </ul>
        </div>
        <div class="col position-relative cursor-pointer">
            <span class="d-flex align-items-center" @click="toggleNavShow(2)">类型<em class="triangeld"
                                                                                      :class="{active: showNavConfig[2]}"></em></span>
        </div>
        <div class="click-show-part bg-light position-absolute start-0 top-100 z-3"
             :class="{'d-none': !showNavConfig[2]}">
            <ul class="list-group col">
                <li @click="selectCurRentType(item)"
                    class="list-group-item  border-0 cursor-pointer"
                    :class="{'list-group-item-success': rentTypeValue === item.value}"
                    v-for="(item, index) in globalData.rentTypes" :key="item.value">
                    {{item.label}}
                </li>
            </ul>
        </div>
        <div class="col position-relative cursor-pointer">
            <span class="d-flex align-items-center" @click="toggleNavShow(3)">户型<em class="triangeld"
                                                                                      :class="{active: showNavConfig[3]}"></em></span>
        </div>
        <div class="click-show-part bg-light position-absolute start-0 top-100 z-3"
             :class="{'d-none': !showNavConfig[3]}">
            <ul class="list-group col">
                <li @click="selectCurHouseType(item)"
                    class="list-group-item border-0 cursor-pointer"
                    :class="{'list-group-item-success': houseTypeValue === item.value}"
                    v-for="(item, index) in globalData.houseTypes" :key="item.value">
                    {{item.label}}
                </li>
            </ul>
        </div>
        <div class="col position-relative cursor-pointer">
            <span class="d-flex align-items-center" @click="toggleNavShow(4)">筛选<em class="triangeld"
                                                                                      :class="{active: showNavConfig[4]}"></em></span>
        </div>
        <div class="click-show-part bg-light position-absolute start-0 top-100 p-3 z-3"
             :class="{'d-none': !showNavConfig[4]}">
            <div class="mb-2" v-for="obj in globalData.filterTypes" :key="obj.label">
                <div class="h6">{{obj.label}}</div>
                <div class="row g-2">
                    <div class="col-3" v-for="(item, index) in obj.list" :key="item.value">
                        <input :type="obj.type" :value="item.value" v-model="filterConfig[obj.model]" class="btn-check"
                               :id="obj.model + String(index)"
                               autocomplete="off">
                        <label class="btn btn-outline-success p-1 w-100 text-nowrap"
                               :for="obj.model + String(index)">{{item.label}}</label>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center pt-2">
                <button class="btn btn-secondary w-25 me-3">重置</button>
                <button class="btn btn-success w-25 ms-3" @click="selectCurFilter(filterConfig)">确定</button>
            </div>
        </div>
    </div>
    <%- include('./share/list'); %>
</div>
<script>
    Vue.createApp({
        data() {
            return {
                globalData,
                curProvince: '0',
                curCity: '1.1',
                rentMoneyValue: "",
                rentTypeValue: '',
                houseTypeValue: '',
                showNavConfig: {},
                filterConfig: {}
            };
        },
        created() {
            for (const obj of this.globalData.filterTypes) {
                if (obj.type === "checkbox") {
                    this.filterConfig[obj.model] = [];
                }
            }
        },
        methods: {
            toggleNavShow(v) {
                for (const key in this.showNavConfig) {
                    if (String(key) !== String(v)) {
                        this.showNavConfig[key] = false;
                    }
                }
                this.showNavConfig[v] = !this.showNavConfig[v];
                console.log(this.showNavConfig[v]);
            },
            selectCurCity(item) {
                this.curCity = item.value;
                this.query('city');
            },
            selectCurPrice(item) {
                this.rentMoneyValue = item.value;
                this.query('price');
            },
            selectCurRentType(item) {
                this.rentTypeValue = item.value;
                this.query('vice_class');
            },
            selectCurHouseType(item) {
                this.houseTypeValue = item.value;
                this.query('room');
            },
            selectCurFilter(config) {
                console.log(config);
                this.query('config');
            },
            query(type) {
                const q = Qs.parse(location.search.slice(1));
                if (type === "city") {
                    if (!this.curCity) {
                        delete q.city;
                    } else {
                        q.city = this.curCity;
                    }
                }
                if (type === "price") {
                    if (!this.rentMoneyValue) {
                        delete q.price;
                    } else {
                        q.price = this.rentMoneyValue;
                    }
                }
                if (type === 'vice_class') {
                    if (!this.rentTypeValue) {
                        delete q.vice_class;
                    } else {
                        q.vice_class = this.rentTypeValue;
                    }
                }
                if (type === 'room') {
                    if (!this.room) {
                        delete q.room;
                    } else {
                        q.room = this.room;
                    }
                }
                if (type === 'config') {
                    for (const key in this.filterConfig) {
                        if (Array.isArray(this.filterConfig[key])) {
                            if (this.filterConfig[key].length === 0) {
                                delete q[key];
                            } else {
                                q[key] = this.filterConfig[key].sort().join(',');
                            }
                        } else {
                            if (!this.filterConfig[key]) {
                                delete q[key];
                            } else {
                                q[key] = this.filterConfig[key];
                            }
                        }
                    }
                }
                window.location.href = window.location.origin + window.location.pathname + "?" + Qs.stringify(q);
            },
            goDetail(id) {
                window.location.href = '/detail/' + id;
            }
        }
    }).mount('#app');
</script>
</body>
</html>